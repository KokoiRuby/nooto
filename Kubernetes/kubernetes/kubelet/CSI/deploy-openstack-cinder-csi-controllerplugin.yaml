apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: openstack-cinder
    meta.helm.sh/release-namespace: kube-system
  creationTimestamp: "2024-06-12T10:03:46Z"
  generation: 1
  labels:
    app: openstack-cinder-csi
    app.kubernetes.io/managed-by: Helm
    ccd/addon: openstack-cinder
    chart: openstack-cinder-csi-2.2.0_5
    component: controllerplugin
    heritage: Helm
    release: openstack-cinder
  name: openstack-cinder-csi-controllerplugin
  namespace: kube-system
  resourceVersion: "15147"
  uid: 0c1998bc-51e7-4ce0-98a9-bd2c78808566
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: openstack-cinder-csi
      component: controllerplugin
      release: openstack-cinder
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: openstack-cinder-csi
        ccd/addon: openstack-cinder
        chart: openstack-cinder-csi-2.2.0_5
        component: controllerplugin
        heritage: Helm
        release: openstack-cinder
    spec:
      affinity: {}
      containers:
      - args:
        - -v=2
        - --csi-address=$(ADDRESS)
        - --timeout=3m
        - --leader-election=true
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: registry.eccd.local:5000/csi-attacher:v3.3.0-74-ecb4e718
        imagePullPolicy: IfNotPresent
        name: csi-attacher
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - -v=2
        - --csi-address=$(ADDRESS)
        - --timeout=3m
        - --leader-election=true
        - --default-fstype=ext4
        - --feature-gates=Topology=true
        - --extra-create-metadata
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: registry.eccd.local:5000/csi-provisioner:v3.0.0-74-ecb4e718
        imagePullPolicy: IfNotPresent
        name: csi-provisioner
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - -v=2
        - --csi-address=$(ADDRESS)
        - --timeout=3m
        - --leader-election=true
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: registry.eccd.local:5000/csi-snapshotter:v4.2.1-74-ecb4e718
        imagePullPolicy: IfNotPresent
        name: csi-snapshotter
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - -v=2
        - --csi-address=$(ADDRESS)
        - --timeout=3m
        - --handle-volume-inuse-error=false
        - --leader-election=true
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: registry.eccd.local:5000/csi-resizer:v1.3.0-74-ecb4e718
        imagePullPolicy: IfNotPresent
        name: csi-resizer
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - -v=2
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: registry.eccd.local:5000/livenessprobe:v2.10.0-74-ecb4e718
        imagePullPolicy: IfNotPresent
        name: liveness-probe
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - /bin/cinder-csi-plugin
        - -v=2
        - --endpoint=$(CSI_ENDPOINT)
        - --cloud-config=$(CLOUD_CONFIG)
        - --cluster=$(CLUSTER_NAME)
        env:
        - name: CSI_ENDPOINT
          value: unix://csi/csi.sock
        - name: CLOUD_CONFIG
          value: /etc/kubernetes/cloud.conf
        - name: CLUSTER_NAME
          value: n200-vpod1-8986
        image: registry.eccd.local:5000/cinder-csi-plugin:v1.28.1-5-ecb4e718
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        name: cinder-csi-plugin
        ports:
        - containerPort: 9808
          name: healthz
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /etc/kubernetes
          name: cloud-config
          readOnly: true
        - mountPath: /etc/ssl/certs/
          name: cert
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/sh
        - -c
        - /bin/cat /etc/kubernetes/ca.crt > /etc/ssl/certs/ca.crt
        image: registry.eccd.local:5000/httpd:v2.4.51-53-ecb4e718
        imagePullPolicy: IfNotPresent
        name: cert-combiner
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: cloud-config
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: cert
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: csi-cinder-controller-sa
      serviceAccountName: csi-cinder-controller-sa
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - emptyDir: {}
        name: socket-dir
      - name: cloud-config
        secret:
          defaultMode: 420
          secretName: cinder-csi-cloud-config
      - emptyDir: {}
        name: cert
      - hostPath:
          path: /etc/cacert
          type: ""
        name: cacert